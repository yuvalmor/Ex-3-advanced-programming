
@{
    ViewBag.Title = "Display";
    ViewBag.Index = 0;
}
<!DOCTYPE html>
<html>
<head>
    <style>
        .bg1 {
            width: 100%;
            height: 100%;
            background-size: cover;
        }
    </style>
    <meta name="viewport" content="width=device-width" />
    <title>Display</title>
</head>
<body background="~/Utils/map.png" class="bg1">
    <canvas id="myCanvas"></canvas>
    <script>
        var canvas = document.getElementById("myCanvas");
        canvas.width = window.innerWidth-100;
        canvas.height = window.innerHeight-100;
        var ctx = canvas.getContext("2d");
        var IntervalTime = (@ViewBag.time) * 1000;
        console.log(IntervalTime);


        function normalizeLongitude(lon) {
            console.log(lon);
            var newLon = ((parseFloat(lon) + 180) * canvas.width / 360);
            console.log(newLon);
            return newLon;
        }

        function normalizeLatitude(lat) {
            console.log(lat);
            var newLat = ((parseFloat(lat) + 90) * canvas.height / 180);
            newLat = canvas.height - newLat;
            console.log(newLat);
            return newLat;
        }
        
        draw = function (lon,lat) {
            var normLon = normalizeLongitude(lon); 
            var normLat = normalizeLatitude(lat);
            ctx.arc(normLon,normLat,5,0,2*Math.PI);
            ctx.strokeStyle = "black";
            ctx.fillStyle = "pink";
            ctx.fill();
            ctx.stroke();
        };

        // get the first position
        InitialPosition = function () {
            var urlLoc = "/Flight/GetPlaneLocation";
            $.get(urlLoc, null, function (xml) {
                var xmlDoc = $.parseXML(xml),
                $xml = $(xmlDoc),
                lon = $xml.find("NewLon").text();
                lat = $xml.find("NewLat").text();
                draw(lon,lat);
            });
        };

        drawTreck = function (NewLon, NewLat, LastLon, LastLat) {
            var newNormLon = normalizeLongitude(NewLon);
            var newNormLat = normalizeLatitude(NewLat);
            var lastNormLon = normalizeLongitude(LastLon);
            var lastNormLat = normalizeLatitude(LastLat);

            console.log("draw treck\n");
            console.log(lastNormLon);
            console.log(lastNormLat);
            console.log(newNormLon);
            console.log(newNormLat);

            ctx.moveTo(lastNormLon, lastNormLat);
            ctx.lineTo(newNormLon, newNormLat);
            ctx.strokeStyle = "black";
            ctx.stroke();
        };

        DesplayTreck = function () {
            var urlTreck = "/Flight/GetPlaneTreck";
            $.get(urlTreck, null, function (xml) {
                var xmlDoc = $.parseXML(xml),
                    $xml = $(xmlDoc),
                    lon = $xml.find("NewLon").text();
                lat = $xml.find("NewLat").text();
                lastLat = $xml.find("LastLat").text();
                lastLon = $xml.find("LastLon").text();
                drawTreck(lon, lat, lastLon, lastLat);
            });
        }
        
        DisplayFromFile = function (arr, size, iter) {
            iter++;
            if (iter <= ((size / 2) - 1)) {
                var i = @ViewBag.Index;
                drawTreck(arr[i], arr[i + 1], arr[i + 2], arr[i + 3]);
            } else {
                clearInterval(interval);
                alert("finished");
            }
        }

        getDataFromFile = function () {
            var file = "@ViewBag.fileName";
            console.log(file);
            var urlTreck = "/Flight/GetPositionsFromFile";
            $.get(urlTreck, file, function (data) {
                var arr = data.split(",");
                var size = arr.length;
                var iter = 0;
                interval = setInterval(DisplayFromFile(arr,size, iter), IntervalTime);
            });
        }
        
        if (@ViewBag.readFromFile == 1) {
            var interval;
            getDataFromFile();
            

        } else {
            InitialPosition();
            if (IntervalTime > 0) {
                setInterval(DesplayTreck, IntervalTime);
            }
        }


    </script>
</body>
</html>